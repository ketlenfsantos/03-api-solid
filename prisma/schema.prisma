/// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//permissões de acesso
enum ROLE {
  ADMIN
  MEMBER
}

//TABELAS (CRIADAS BASEADAS NOS RF (README))

//tabela de usuário 
model User {
  id            String    @id @default(uuid())
  name          String
  email         String    @unique
  password_hash String
  role          ROLE      @default(MEMBER)
  created_at    DateTime  @default(now()) //data q usuário foi criadonpx
  checkIns      CheckIn[]

  @@map("users")
}

// tabela de check in da academia

model CheckIn {
  id           String    @id @default(uuid())
  created_at   DateTime  @default(now()) //data que foi criado o checkin
  validated_at DateTime?

  user    User   @relation(fields: [user_id], references: [id]) //forma de criar relacionamento: USER E CHECKIN
  user_id String

  gym    Gym    @relation(fields: [gym_id], references: [id])
  gym_id String

  @@map("check_ins")
}

// tabela de academia 
model Gym {
  id          String    @id @default(uuid())
  title       String //nome da academia
  description String? //opcional(?) 
  phone       String?
  latitude    Decimal //localidade
  longitude   Decimal //localidade
  checkIns    CheckIn[]

  @@map("gyms") //dessa forma sera salvo no banco de dados: gyms
}

//relacionamento de tabelas:
//1/N ex: 1 usuario pode fazer varios checkins
//N/N: eu tenho 1 registro em 1 tabela q pode estar registrado com outra ex: 1 checkin associado a varios usuários
